// Code generated by goa v3.10.1, DO NOT EDIT.
//
// upload endpoints
//
// Command:
// $ goa gen backend/design

package upload

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "upload" service endpoints.
type Endpoints struct {
	UploadPhoto goa.Endpoint
}

// NewEndpoints wraps the methods of the "upload" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		UploadPhoto: NewUploadPhotoEndpoint(s),
	}
}

// Use applies the given middleware to all the "upload" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.UploadPhoto = m(e.UploadPhoto)
}

// NewUploadPhotoEndpoint returns an endpoint function that calls the method
// "upload_photo" of service "upload".
func NewUploadPhotoEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*UploadPhotoPayload)
		return s.UploadPhoto(ctx, p)
	}
}
