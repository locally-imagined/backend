// Code generated by goa v3.10.2, DO NOT EDIT.
//
// login HTTP server types
//
// Command:
// $ goa gen backend/design

package server

import (
	login "backend/gen/login"
)

// LoginResponseBody is the type of the "login" service "Login" endpoint HTTP
// response body.
type LoginResponseBody LoginResponseResponseBody

// LoginResponseResponseBody is used to define fields on response body types.
type LoginResponseResponseBody struct {
	// jwt used for future authentication
	JWT *string `form:"jwt,omitempty" json:"jwt,omitempty" xml:"jwt,omitempty"`
	// users ID
	UserID *string `form:"userID,omitempty" json:"userID,omitempty" xml:"userID,omitempty"`
}

// NewLoginResponseBody builds the HTTP response body from the result of the
// "Login" endpoint of the "login" service.
func NewLoginResponseBody(res *login.LoginResult) *LoginResponseBody {
	body := &LoginResponseBody{
		JWT:    res.LoginResponse.JWT,
		UserID: res.LoginResponse.UserID,
	}
	return body
}

// NewLoginPayload builds a login service Login endpoint payload.
func NewLoginPayload() *login.LoginPayload {
	v := &login.LoginPayload{}

	return v
}
