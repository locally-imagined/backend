// Code generated by goa v3.10.2, DO NOT EDIT.
//
// users HTTP server types
//
// Command:
// $ goa gen backend/design

package server

import (
	users "backend/gen/users"

	goa "goa.design/goa/v3/pkg"
)

// UpdateBioRequestBody is the type of the "users" service "update_bio"
// endpoint HTTP request body.
type UpdateBioRequestBody struct {
	// New bio to be addeed
	Bio *string `form:"bio,omitempty" json:"bio,omitempty" xml:"bio,omitempty"`
}

// UpdateBioResponseBody is the type of the "users" service "update_bio"
// endpoint HTTP response body.
type UpdateBioResponseBody UserResponseBody

// GetContactInfoResponseBody is the type of the "users" service
// "get_contact_info" endpoint HTTP response body.
type GetContactInfoResponseBody UserResponseBody

// UserResponseBody is used to define fields on response body types.
type UserResponseBody struct {
	// First name
	FirstName string `form:"firstName" json:"firstName" xml:"firstName"`
	// Last name
	LastName string `form:"lastName" json:"lastName" xml:"lastName"`
	// Phone number
	Phone string `form:"phone" json:"phone" xml:"phone"`
	// Email
	Email string `form:"email" json:"email" xml:"email"`
}

// NewUpdateBioResponseBody builds the HTTP response body from the result of
// the "update_bio" endpoint of the "users" service.
func NewUpdateBioResponseBody(res *users.UpdateBioResult) *UpdateBioResponseBody {
	body := &UpdateBioResponseBody{
		FirstName: res.UpdatedUser.FirstName,
		LastName:  res.UpdatedUser.LastName,
		Phone:     res.UpdatedUser.Phone,
		Email:     res.UpdatedUser.Email,
	}
	return body
}

// NewGetContactInfoResponseBody builds the HTTP response body from the result
// of the "get_contact_info" endpoint of the "users" service.
func NewGetContactInfoResponseBody(res *users.GetContactInfoResult) *GetContactInfoResponseBody {
	body := &GetContactInfoResponseBody{
		FirstName: res.ContactInfo.FirstName,
		LastName:  res.ContactInfo.LastName,
		Phone:     res.ContactInfo.Phone,
		Email:     res.ContactInfo.Email,
	}
	return body
}

// NewUpdateBioPayload builds a users service update_bio endpoint payload.
func NewUpdateBioPayload(body *UpdateBioRequestBody, token string) *users.UpdateBioPayload {
	v := &users.UpdateBioPayload{
		Bio: *body.Bio,
	}
	v.Token = token

	return v
}

// NewGetContactInfoPayload builds a users service get_contact_info endpoint
// payload.
func NewGetContactInfoPayload(userid int) *users.GetContactInfoPayload {
	v := &users.GetContactInfoPayload{}
	v.Userid = userid

	return v
}

// ValidateUpdateBioRequestBody runs the validations defined on
// update_bio_request_body
func ValidateUpdateBioRequestBody(body *UpdateBioRequestBody) (err error) {
	if body.Bio == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("bio", "body"))
	}
	return
}
