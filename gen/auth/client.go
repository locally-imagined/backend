// Code generated by goa v3.10.1, DO NOT EDIT.
//
// auth client
//
// Command:
// $ goa gen backend/design

package auth

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "auth" service client.
type Client struct {
	LoginEndpoint  goa.Endpoint
	SignupEndpoint goa.Endpoint
}

// NewClient initializes a "auth" service client given the endpoints.
func NewClient(login, signup goa.Endpoint) *Client {
	return &Client{
		LoginEndpoint:  login,
		SignupEndpoint: signup,
	}
}

// Login calls the "Login" endpoint of the "auth" service.
// Login may return the following errors:
//	- "unauthorized" (type Unauthorized)
//	- error: internal error
func (c *Client) Login(ctx context.Context, p *LoginPayload) (res *LoginResult, err error) {
	var ires interface{}
	ires, err = c.LoginEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*LoginResult), nil
}

// Signup calls the "Signup" endpoint of the "auth" service.
// Signup may return the following errors:
//	- "unauthorized" (type Unauthorized)
//	- error: internal error
func (c *Client) Signup(ctx context.Context, p *SignupPayload) (res *SignupResult, err error) {
	var ires interface{}
	ires, err = c.SignupEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SignupResult), nil
}
