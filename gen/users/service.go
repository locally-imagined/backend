// Code generated by goa v3.10.2, DO NOT EDIT.
//
// users service
//
// Command:
// $ goa gen backend/design

package users

import (
	"context"

	"goa.design/goa/v3/security"
)

// Service is the users service interface.
type Service interface {
	// UpdateBio implements update_bio.
	UpdateBio(context.Context, *UpdateBioPayload) (res *UpdateBioResult, err error)
	// UpdateProfilePhoto implements update_profile_photo.
	UpdateProfilePhoto(context.Context, *UpdateProfilePhotoPayload) (res *UpdateProfilePhotoResult, err error)
	// GetContactInfo implements get_contact_info.
	GetContactInfo(context.Context, *GetContactInfoPayload) (res *GetContactInfoResult, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "users"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"update_bio", "update_profile_photo", "get_contact_info"}

// Updated Bio
type Bio struct {
	// New Bio
	Bio *string
}

// Image Content
type Content struct {
	// raw image content
	Content *string
}

// GetContactInfoPayload is the payload type of the users service
// get_contact_info method.
type GetContactInfoPayload struct {
	// userid of user whose info to retrieve
	UserID string
}

// GetContactInfoResult is the result type of the users service
// get_contact_info method.
type GetContactInfoResult struct {
	ContactInfo *User
}

// Profile Photo uuid
type ProfilePhoto struct {
	// photo id
	PhotoUUID *string
}

// UpdateBioPayload is the payload type of the users service update_bio method.
type UpdateBioPayload struct {
	// jwt used for auth
	Token string
	// New bio to be added
	Bio *Bio
}

// UpdateBioResult is the result type of the users service update_bio method.
type UpdateBioResult struct {
	UpdatedUser *User
}

// UpdateProfilePhotoPayload is the payload type of the users service
// update_profile_photo method.
type UpdateProfilePhotoPayload struct {
	// jwt used for auth
	Token string
	// New Profile Photo
	Content *Content
}

// UpdateProfilePhotoResult is the result type of the users service
// update_profile_photo method.
type UpdateProfilePhotoResult struct {
	PhotoID *ProfilePhoto
}

// Describes a user
type User struct {
	// First name
	FirstName string
	// Last name
	LastName string
	// Phone number
	Phone string
	// Email
	Email string
}

// Credentials are invalid
type Unauthorized string

// Error returns an error description.
func (e Unauthorized) Error() string {
	return "Credentials are invalid"
}

// ErrorName returns "unauthorized".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e Unauthorized) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "unauthorized".
func (e Unauthorized) GoaErrorName() string {
	return "unauthorized"
}
