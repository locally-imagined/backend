// Code generated by goa v3.10.2, DO NOT EDIT.
//
// postings endpoints
//
// Command:
// $ goa gen backend/design

package postings

import (
	"context"

	goa "goa.design/goa/v3/pkg"
	"goa.design/goa/v3/security"
)

// Endpoints wraps the "postings" service endpoints.
type Endpoints struct {
	CreatePost       goa.Endpoint
	GetPostPage      goa.Endpoint
	GetImagesForPost goa.Endpoint
}

// NewEndpoints wraps the methods of the "postings" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	// Casting service to Auther interface
	a := s.(Auther)
	return &Endpoints{
		CreatePost:       NewCreatePostEndpoint(s, a.JWTAuth),
		GetPostPage:      NewGetPostPageEndpoint(s),
		GetImagesForPost: NewGetImagesForPostEndpoint(s),
	}
}

// Use applies the given middleware to all the "postings" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.CreatePost = m(e.CreatePost)
	e.GetPostPage = m(e.GetPostPage)
	e.GetImagesForPost = m(e.GetImagesForPost)
}

// NewCreatePostEndpoint returns an endpoint function that calls the method
// "create_post" of service "postings".
func NewCreatePostEndpoint(s Service, authJWTFn security.AuthJWTFunc) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*CreatePostPayload)
		var err error
		sc := security.JWTScheme{
			Name:           "jwt",
			Scopes:         []string{},
			RequiredScopes: []string{},
		}
		ctx, err = authJWTFn(ctx, p.Token, &sc)
		if err != nil {
			return nil, err
		}
		return s.CreatePost(ctx, p)
	}
}

// NewGetPostPageEndpoint returns an endpoint function that calls the method
// "get_post_page" of service "postings".
func NewGetPostPageEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetPostPagePayload)
		return s.GetPostPage(ctx, p)
	}
}

// NewGetImagesForPostEndpoint returns an endpoint function that calls the
// method "get_images_for_post" of service "postings".
func NewGetImagesForPostEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetImagesForPostPayload)
		return s.GetImagesForPost(ctx, p)
	}
}
